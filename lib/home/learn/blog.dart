//import 'package:flutter/material.dart';
Map methods = {
  'about_sudoku': [
    'About Sudoku',
    {
      'title': 'Sudoku မိတ်ဆက်'
    },
    {
      'body': '\t Sudoku ဟာ ဂဏန်းတွေကိုသက်ဆိုင်ရာ နေရာတွေမှာ လိုက်ဖြည့်ပေးရတဲ့ ကစားနည်းတစ်မျိုးဖြစ်တယ်။ ပုံမှန် sudoku ကစားကွက်တွေဟာ 9×9 grid ပုံစံရှိပြီး အထဲမှာ box(3×3 grid) 9ခုနဲ့ ဖွဲ့စည်းထားပါတယ်။ ကစားနည်းကတော့ ပေးထားတဲ့ ဂဏန်းတွေကိုကြည့်ပြီးတော့ လွတ်နေတဲ့အကွက်မှာ ဖြစ်နိုင်တဲ့ဂဏန်းတွေလိုက်ဖြည့်ရမှာပါ။ စည်းကမ်းချက်ကတော့ row တစ်ခုစီ၊ column တစ်ခုစီ၊ box တစ်ခုစီမှာ 1 ကနေ 9 အတွင်းက ဂဏန်းတွေကို မထပ်စေပဲဖြည့်ပေးရမှာဖြစ်ပါတယ်။\n\n\tအောက်မှာ နမူနာပုံစံဖြေပြထားပါတယ်။\n'
    },
    {
      'fakesudoku': 'about_one'
    },
    {
      'label': "ပုံမှန် sudoku မကစားမီ….."
    },
    {
      'fakesudoku': 'about_two'
    },
    {
      'label': '…ကစားပြီး။\n'
    },
    {
      'title': 'Sudoku သမိုင်းအကျဉ်း'
    },
    {
      'body': '\t ၁၉ရာစုနှောင်းပိုင်းလောက်မှာ sudoku ရယ်လို့မပေါ်သေးခင် ပြင်သစ်မှာ ဂဏန်းတွေဖြည့်တဲ့ကစားနည်းတစ်ခု ကစားခဲ့ကြတယ်။ သူကလည်း  9×9 grid ကို 1 to 9 ထဲက ဂဏန်းတွေ ဖြည့်တဲ့ပုံစံနဲ့ပဲလာတယ်။ စည်းကမ်းချက်တွေကတော့ row တစ်ခုချင်းစီ၊ column တစ်ခုချင်းစီနဲ့ ဒေါင့်ဖြတ်တစ်ခုချင်းစီပေါင်းလဒ်တွေအား လုံးဟာတူညီရပါမယ်။ ကစားနည်းမှာတော့ ဂဏန်းတွေဟာ ထပ်လို့ရ‌နေပါသေးတယ်။ ၁၉၈၆ခုနှစ်ရောက်မှ ဂျပန်က Nikoli ကုမ္ပဏီကနေ Sudoku(single number ဂဏန်းတစ်လုံးတည်း) ဆိုတဲ့နာမည်နဲ့ ဖန်တီးလိုက်တာကနေ Sudoku ဆိုပြီးဖြစ်လာပါတယ်။\n'
    },
    {
      'title': 'Sudoku မျိုးကွဲများ'
    },
    {
      'body': '\t Sudoku ဟာ ကစားသူတွေများလာသလို ပုံစံအမျိုးမျိုး စည်းကမ်းချက်အမျိုးမျိုးနဲ့ ဖန်တီးလာကြတယ်။'
    },
    {
      'list': [
        'Box တွေကို 3×3 grid ပုံစံမဟုတ်ပဲ jigsaw ပုံစံမျိုးလုပ်ပြီးတော့ ကစားရတဲ့ jigsaw sudoku ပုံစံမျိုး။\n',
        '9×9 grid အစား 6x6 grid ကိုမှ boxက 3×2 grid နဲ့ ကစားရတဲ့ mini sudoku ပုံစံမျိုး။\n',
        'Jigsaw ပုံစံအကွက်တွေမှာ ပေါင်းလိုက်ရင် ရမယ့်ရလဒ်တွေကို ထည့်ပေးထားတဲ့ killer sudoku ပုံစံမျိုး။\n',
        'ပုံမှန် sudoku ပုံစံကိုမှ အထဲမှာ box လေးခုထပ်ဖြည့်ထားတဲ့ hyper sudoku ပုံစံမျိုး။\n',
        'ဂဏန်းတွေအစား အက္ခရာထည့်သုံးတဲ့ alphabetical sudoku ပုံစံမျိုးတွေအပြင်',
      ]
    },
    {
      'body': 'တစ်ခြားအမျိုးမျိုးသောပုံစံတွေနဲ့ ကစားလာကြသလို ပြိုင်ပွဲကြီးကြီးမားမားတွေ ကျင်းပပေးကြပါတယ်။\n'
    },
    {
      'title': 'Sudoku Tip'
    },
    {
      'body': '\t Sudoku ကိုကစားသူအမျိုးမျိုးရဲ့ စဉ်းစားနည်းတွေဟာ တစ်ယောက်နဲ့တစ်ယောက် မတူကြပါဘူး။ ဘယ်လိုစဉ်းစားတာ အဖြေနဲ့ပိုနီးစပ်မလဲ၊ စဉ်းစားချိန်ပိုတိုမလဲ ဆိုတာကတော့ ကစားပါများလာရင် သိလာပါလိမ့်မယ်။ ခုမှစကစားမယ့် သူတွေအတွက် tip တစ်ချို့ကို ဖော်ပြပေးလိုက်ပါတယ်။'
    },
    {
      'list': [
        'စဉ်းစားရမယ့်အကွက်ကို ရွေးတဲ့အခါ box တစ်ခုစီရဲ့ များများဖြည့်ထားတဲ့ အကွက်ကိုရွေးပြီး စဉ်းစားပါ။ များများဖြည့်ပြီးသားဖြစ်လို့ နောက်ထပ်ဖြစ်နိုင်ခြေဟာ နည်းသွားလို့ စဉ်းစားရမြန်စေပါတယ်။\n',
        'စဉ်းစားတဲ့အခါ ၈၁ကွက်လုံးကို ခြုံစဉ်းစားတာထက် box သုံးခုပါတဲ့ row သုံးတန်းသို့ column သုံးတန်းကို ခွဲပြီး စဉ်းစားတာကလည်း ပိုအဆင်ပြေစေပါတယ်။\n',
        'နောက်ပြီး sudoku ဟာ 1ကနေ 9 အထိဂဏန်းတွေကို မထပ်ပဲဖြည့်ရတာကြောင့် ဂဏန်းတစ်လုံးက ၉ကြိမ်ထက်ပို မရှိနိုင်ပါဘူး။ ၉လုံးပြည့်သွားတဲ့ ဂဏန်းတွေကို ဖယ်ပြီးလည်း စဉ်းစားနိုင်ပါတယ်။\n',
        'စဉ်းစားတဲ့အခါ ပိုပြီးမြန်အောင် auto fill pencile mode ကိုသုံးနိုင်ပါတယ်။\n'
      ]
    },
    {
      'body': 'နောက်ထပ်စဉ်းစားပုံစဉ်းစားနည်းတွေကို Method to solve မှာ ဝင်ကြည့်နိုင်ပါတယ်။',
    },
    {
      'netlink': [
        'Sudoku အကြောင်းနောက်ထပ်အသေးစိတ်လေ့လာချင်ရင်တော့ အောက်က ',
        {
          'link': 'https://en.m.wikipedia.org/wiki/Sudoku'
        },
        'မှာဝင်ကြည့်နိုင်ပါတယ်။'
      ]
    },
    {
      'internal_link': {
        'Solving Method': '/solvemethod'
      }
    }
  ],
  'sole_candidate': [
    'Sole Candidate or Naked Single',
    {
      'title': 'Sole Candidate or Naked Single'
    },
    {
      'body': '\t Sole candidate ဆိုတာက sudoku puzzle တွေကိုစဉ်းစားတဲ့ နည်းလမ်းတွေထဲက တစ်ခုဖြစ်ပြီး သူ့ကို Naked Single လို့လည်း လူသိများတယ်။ သူက ဖြစ်နိုင်တဲ့ ဂဏန်းတစ်လုံးပဲကျန်တဲ့အထိ ကျန်ဂဏန်းတွေကိုဖယ်ထုတ်ပြီး စဉ်းစားတဲ့ နည်းစနစ်တစ်ခုဖြစ်တယ်။ ဥပမာအနေနဲ့ အောက်ကပုံကိုကြည့်ပါ။\n'
    },
    {
      'image': 'assets/image/solecandidate.png'
    },
    {
      'label': ' sole candidate စဉ်းစားပုံ'
    },
    {
      'body': '\t ပုံမှာရွေးချယ်ထားတဲ့အကွက်မှာ ဖြည့်ရမယ့်ဂဏန်းကို ရှာကြမယ်ဆိုပါစို့။ ပထမဆုံး ဖြည့်ရမယ့် ဂဏန်းသည် ၁ကနေ၉အထဲက တစ်ခုခုဖြစ်မယ်။ ဒါပေမယ့် သူ့ row မှာ ရှိပြီးသားလည်းမဖြစ်ရဘူးဆိုတော့ 1 to 9ထဲကနေ 2,9,7 ကိုဖယ်လိုက်မယ်။ column အတွင်းမှာ ရှိပြီးသား ဂဏန်းလည်းမဖြစ်ရဘူးဆို‌တော့ 1,6,3 ကိုလည်း ဖယ်လိုက်မယ်။ box အတွင်းမှာရှိပြီးသားလည်း မဖြစ်ရဘူးဆိုတော့ 4,8ကို ထပ်ဖယ်လိုက်ရင် နောက်ဆုံး 5ပဲထည့်စရာကျန်တော့တယ်။ တကယ်လို့ဖြစ်နိုင်ခြေ တစ်ခုထက်ပိုနေရင် တစ်ခြားနည်းပြောင်းစဉ်းစားကြည့်ပါ။\n'
    },
  ],
  'unique_candidate': [
    'Unique Candidate or Hidden Single',
    {
      'title': 'Unique Candidate or Hidden Single'
    },
    {
      'body': '\t နောက်ထပ်နည်းစနစ် တစ်ခုကတော့ ပျောက်နေတဲ့ အကွက်ကိုရှာပြီးတော့ ဂဏန်းလိုက်ဖြည့်တဲ့နည်းပါ။ ပုံကိုကြည့်လိုက်ရင် ရှင်းသွားပါလိမ့်မယ်။\n'
    },
    {
      'image': 'assets/image/unique_candidate.png'
    },
    {
      'label': 'Unique Candidate စဉ်းစားပုံ'
    },
    {
      'body': '\t ကျွန်တော်တို့သိပြီးသား ဖြစ်တဲ့ box တစ်ခုအတွင်းမှာ ဂဏန်းတွေထပ်ရဘူးဆိုတဲ့အချက်အရ ပထမ box နဲ့ ဒုတိယ box ထဲမှာ 4ကိုထည့်လို့မရတော့ပါဘူး။ တတိယ box ထဲမှာ 4ထည့်ဖို့ စဉ်းစားကြည့်ရင် ထည့်မည့်အကွက်ရဲ့ row နဲ့ column မှာ 4ရှိမနေမှဆိုတော့ ကျန်တဲ့နောက်ဆုံးတစ်ကွက်ကပဲ အဖြေဖြစ်သွားပါတယ်။ တကယ်လို့ ဖြစ်နိုင်ခြေ တစ်ခုထဲမကရင်တော့ Naked Single နည်းနဲဖြေရှင်းလို့မရသေးဘူးလို့ ဆိုရမယ်။ \n',
    }
  ],
  'block_with_column_row_interaction': [
    'Block with Column-Row Interaction',
    {
      'title': 'Block with Column-Row Interaction'
    },
    {
      'body': '\t Block with Column-Row Interaction ဆိုတာက ရွေးချယ်ထားတဲ့ ဂဏန်းအတွက် မဖြစ်နိုင်တဲ့ အကွက်တွေကို ဖယ်ပြီးစဉ်းစားတဲ့နည်းဖြစ်ပါတယ်။ စဉ်းစားနေတဲ့ဂဏန်းဟာ box အတွင်းက တစ်ကွက်မကတဲ့ နေရာတွေမှာဖြစ်နိုင်ပေမယ့် သူ့ကြောင့် တစ်ခြား row တွေ column တွေမှာ မဖြစ်နိုင်တော့တဲ့အခါ ကျန်အကွက်တွေကို ဖယ်ပြီးစဉ်းစားနိုင်လို့ စဉ်းစားရပိုမြန်သွားစေပါတယ်။\n'
    },
    {
      'image': 'assets/image/block_with_column_row_interactions.jpg'
    },
    {
      'body': 'ပုံရဲ့ ဒုတိယ box မှာ 2 ဂဏန်းရဲ့ ဖြစ်နိုင်ခြေကို စဉ်းစားကြည့်တော့ ခဲရောင်နဲ့ခြယ်ထားတဲ့ အကွက်နှစ်ကွက်မှာပဲ ထည့်လို့ရတာတွေ့ရတယ်။ နှစ်ကွက်လုံးက column တစ်ခုထဲမှာ ရှိနေတာကြောင့် အဲ့ column ရဲ့ ကျန်နေတဲ့ တစ်ခြားအကွက်တွေမှာ 2 ဂဏန်း ထည့်မရတော့ပါဘူး။ ဖယ်ထုတ်စဉ်းစားလိုက်တာကြောင့် တစ်ခြားအကွက်တွေမှာ စဉ်းစားရလျော့သွားစေပါတယ်။\n'
    }
  ],
  'block_block_interaction': [
    'Block/ Block Interaction',
    {
      'title': 'Block/ Block Interaction'
    },
    {
      'body': '\tစဉ်းစားတဲ့အခါ အတွဲလိုက် box သုံးခုရဲ့ တူညီတဲ့ row သို့ column ဟာပိတ်မိနေခဲ့ရင် ကျန် box တစ်ခုရဲ့ row သို့ column မှာ ပဲရွေးခြယ်ဖြည့်လို့ရပါတယ်။\n'
    },
    {
      'image': 'assets/image/block_block_interaction.jpg'
    },
    {
      'body': '\t အထက်ပါပုံကိုကြည့်မယ်ဆိုရင် 9 ဂဏန်းဟာ တူညီတဲ့ row တစ်ခုကို box ဘယ်ဖက်က box နှစ်ခုမှာ ပိတ်နေတာကြောင့် ကျန် box တစ်ခုရဲ့ အောက်ဆုံး row မှာသာ 9 ဖြစ်နိုင်တော့တယ်။\n'
    }
  ],
  'naked_pair': [
    'Naked Pair or Naked Subset',
    {
      'title': 'Naked Pair or Naked Subset'
    },
    {
      'body': 'Naked Pair သို့ Naked Subset ကို row တစ်ခု column တစ်ခု (သို့) box တစ်ခုမှာရှိတဲ့ တဲ့ အကွက်နှစ်ကွက်မှာ တူညီတဲ့ ဖြစ်နိုင်ခြေ ဂဏန်းနှစ်ခုရှိနေတဲ့အခါမျိုးမှာ သုံးတယ်။ တူညီတဲ့ ဂဏန်းနှစ်လုံးဟာ အဲ့ row/column သို့ box ရဲ့ တစ်ခြားနေရာတွေမှာ မဖြစ်နိုင်တော့ပါဘူး။ အောက်ကပုံမှာ ဥပမာ ပြပေးထားပါတယ်။\n'
    },
    {
      'image': 'assets/image/naked_pair.png'
    },
    {
      'body': 'ပုံမှာရှိတဲ့ ပထမ column မှာ ကိုကြည့်ပါ။ ပထမ row နဲ့ ပဥ္စမ row မှာ 4 နဲ့ 7 ဂဏန်းပဲ ထည့်လို့ရတာကြောင့် ကျန် row တွေမှာ ၄နဲ့၇ ကိုပယ်ပြီးစဉ်းစားနိုင်သွားပါပြီ။\n'
    }
  ],
  'hidden_pair': [
    'Hidden Pairs',
    {
      'title': 'Hidden Pairs'
    },
    {
      'body': '\t Hidden Pairs ဆိုတာက Naked Single စဉ်းစားပုံမျိုးနဲ့ဆင်တယ်။ ဒါပေမယ့် တူတဲ့ ဂဏန်းဖြစ်နိုင်ခြေနှစ်ခုက မမြင်သာဘူး တစ်ခြားဂဏန်းတွေနဲ့ရောနေတယ် ဒါပေ့မယ့် အဲ့နှစ်ကွက်မှာ တစ်ခြားဂဏန်းဖြည့်မရတဲ့အခါ ကျန်ဂဏန်းတွေကို ဖယ်ထုတ်ပြီး စဉ်းစားနိုင်တယ်။ ဥပမာအနေနဲ့ အောက်ကပုံကိုကြည့်ပါ။\n'
    },
    {
      'image': 'assets/image/hidden_pairs.jpg'
    },
    {
      'body': '\t ပုံရဲ့ 8ခုမြှောက် column မှာ 3နဲ့6ဟာ ခဲခြယ်ထားတဲ့ နှစ်ကွက်မှာပဲဖြစ်နိုင်လို့ ကျန်တဲ့ ဖြစ်နိုင်ခြေတွေကို ဖယ်ထုတ်ထားတာပါ။ 3 နဲ့6 ပဲဖြစ်နိုင်တာကို တစ်ခြားဂဏန်းတွေနဲ့ရောနေ လို့ မမြင်သာတာကြောင့် hidden pair လို့ခေါ်ကြတယ်။ \n'
    }
  ],
  'naked_triples': [
    'Naked Triples',
    {
      'title': 'Naked Triples'
    },
    {
      'body': '\t Naked Triples ဆိုတာကလည်း Naked Pair နဲ့ စဉ်းစားပုံချင်းဆင်တယ်။ တူညီတဲ့ row (သို့)column (သို့) boxတစ်ခုရဲ့ 3ကွက်အတွင်းမှာ ဖြစ်နိုင်တဲ့ ဂဏန်းသုံးလုံးပဲရှိတယ်ဆိုရင် ကျန်အကွက်တွေမှာ စဉ်းစားထားတဲ့ အဲ့ဂဏန်းတွေဖယ်စဉ်းစားပါတဲ့။ အကွက် 4ကွက်နဲ့ ဂဏန်း 4လုံးပဲဖြစ်နိုင်ရင် Naked Quads စသည့်ဖြင့် စဉ်းစားသွားနိုင်ပါတယ်။ ဥပမာပုံကိုကြည့်ပါ။\n'
    },
    {
      'image': 'assets/image/naked_triples.jpg'
    },
    {
      'body': '\t ပုံကခဲရောင်ခြယ်ထားတဲ့အကွက် ၃ကွက်မှာ 3,8 ဖြစ်နိုင်တာရယ် 3,4 ဖြစ်နိုင်တာရယ် 4,8 ဖြစ်နိုင်တဲ့ အကွက်သုံးကွက်ဖြစ်ပေမယ့် ဖြစ်နိုင်တဲ့ဂဏန်းကလည်း 3ခုပဲဖြစ်နေတယ်။ ဒါကြောင့် ကျန်အကွက်တွေမှာ 3,4,8 ကိုဖယ်ပြီးစဉ်းစားလို့ရသွားတယ်။ အဲ့တော့ ကျန်တစ်ကွက်က 9ဖြစ်ပြီး နောက်တစ်ကွက်က 2ဖြစ်မယ်ဆိုပြီး အဖြေရလာတယ်။\n'
    }
  ],
  'hidden_triples': [
    'Hidden Triples',
    {
      'title': 'Hidden Triples'
    },
    {
      'body': '\t Hidden Triples ကလည်း Hidden Pair နဲ့ စဉ်းစားပုံချင်းတူပါတယ်။ ကျန်ခဲ့တဲ့ သုံးခုက မြုပ်နေတာပဲကွာတာပါ။ 4ကွက်နဲ့ ဂဏန်း4လုံးပဲဖြစ်နိုင်ပြီး တစ်ခြားဂဏန်းတွေရောနေရင် Hidden Quads ရယ်လို့ခေါ်ကြတယ်။ ဥပမာလေး ကြည့်ရအောင်။\n'
    },
    {
      'image': 'assets/image/hidden_triples.jpg'
    },
    {
      'body': '\t	ပုံမှာကြည့်ရင် ခဲရောင်ခြယ်ထားတဲ့ အကွက်၃ကွက်မှာသာ 2,6,9 ဂဏန်းဖြစ်နိုင်တာကြောင့် အဲ့အကွက်တွေထဲက တစ်ခြားဂဏန်းတွေကို ဖယ်ထုတ်စဉ်းစားလို့ရတယ်။\n'
    },
    {
      'subtitle': 'Other Technique'
    },
    {
      'body': '\n \t တစ်ခြားတစ်ခြားသော နည်းလမ်းများဖြစ်တဲ့ X-WIng, XY-Wing, XYZ-Wing, X-Y Chains, Frocing Chains တို့ coloring တို့ကိုတော့ သက်ဆိုင်ရာ Online မှာ ရှာဖွေလေ့လာနိုင်ပါတယ်။ ဒါကတော့ ကျွန်တော်ရေးဖို့ ကြည့်ခဲ့တဲ့ site တွေပါ။\n'
    },
    {
      'netlink': [
        {
          'PUZZLE BOOKS+': 'http://puzzlebooksplus.com/solve-sudoku/#'
        }
      ]
    },
    {
      'netlink': [
        {
          'www.kristanix.com\n': 'https://www.kristanix.com/sudokuepic/sudoku-solving-techniques.php'
        },
      ]
    }
  ]
};

List about_one = [
  [
    5,
    3,
    0,
    0,
    7,
    0,
    0,
    0,
    0
  ],
  [
    6,
    0,
    0,
    1,
    9,
    5,
    0,
    0,
    0
  ],
  [
    0,
    9,
    8,
    0,
    0,
    0,
    0,
    6,
    0
  ],
  [
    8,
    0,
    0,
    0,
    6,
    0,
    0,
    0,
    3
  ],
  [
    4,
    0,
    0,
    8,
    0,
    3,
    0,
    0,
    1
  ],
  [
    7,
    0,
    0,
    0,
    2,
    0,
    0,
    0,
    6
  ],
  [
    0,
    6,
    0,
    0,
    0,
    0,
    2,
    8,
    0
  ],
  [
    0,
    0,
    0,
    4,
    1,
    9,
    0,
    0,
    5
  ],
  [
    0,
    0,
    0,
    0,
    8,
    0,
    0,
    7,
    9
  ]
];
List about_two = [
  [
    5,
    3,
    4,
    6,
    7,
    8,
    9,
    1,
    2
  ],
  [
    6,
    7,
    2,
    1,
    9,
    5,
    3,
    4,
    8
  ],
  [
    1,
    9,
    8,
    3,
    4,
    2,
    5,
    6,
    7
  ],
  [
    8,
    5,
    9,
    7,
    6,
    1,
    4,
    2,
    3
  ],
  [
    4,
    2,
    6,
    8,
    5,
    3,
    7,
    9,
    1
  ],
  [
    7,
    1,
    3,
    9,
    2,
    4,
    8,
    5,
    6
  ],
  [
    9,
    6,
    1,
    5,
    3,
    7,
    2,
    8,
    4
  ],
  [
    2,
    8,
    7,
    4,
    1,
    9,
    6,
    3,
    5
  ],
  [
    3,
    4,
    5,
    2,
    8,
    6,
    1,
    7,
    9
  ]
];
